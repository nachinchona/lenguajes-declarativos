La página web fue realizada en SWI-Prolog, utilizando las librerías de HTTP. Se dispone de un manejador de archivos localizado en la ruta /f, que apunta a la carpeta 'assets' del proyecto. Se hace uso de DCGs, HTML 'termerizado', quasiquotes (para página de error), estilos CSS y una base de datos para lograr persistencia de datos (localizada en el archivo .journal). 

En primer lugar, se cuenta con una página de bienvenida, que tiene el logo de la FAI y un botón para ingresar al blog. Se emplea un handler a la dirección / (root) que contiene dicha página de bienvenida. Los estilos CSS se incluyen a través de una DCG llamada css(URL), donde URL es la dirección donde se encuentra el estilo (puede ser una dirección web o como en este caso un archivo local).

Luego se arma el blog a partir de los posts y comentarios guardados. Esto se logra obteniendo todos los posts (con findall), los cuales se retorna en forma (X,Y,Z), siendo X el título, Y el cuerpo y Z la lista de comentarios. Esta lista se invierte (para ver los posts más nuevos primero), y entonces se llama a un método que toma esta lista de posts y la convierte a una lista de elementos HTML termerizados. Esta conversión la realiza recorriendo la lista de posts y por cada post armando la estructura necesaria para la página. De manera similar se convierte la lista de comentarios a HTML, por cada comentario se crea un elemento con lo que contiene pero formateado adecuadamente. Estas listas de elementos se utilizan dentro del método reply_html_page mediante la función print_html(ListaHTML). Se emplean dos botones para ir al principio y fin de la página respectivamente, ya que la estructura para publicar posts está debajo del todo, por lo que si hay muchos posts resulta engorroso scrollear hasta ahí. También se cuenta con un botón de atrás armado en DCG.

En cuanto a la base de datos, se cuenta con un archivo .pl separado que lo modela. Otorga las operaciones de publicar/2, comentar/2, clear_blog (quitar todos los posts y comentarios), y static_blog (un conjunto prediseñado de posts y comentarios). La escritura de los asertos está en un archivo llamado database.journal.
Observación: la acción de comentar toma un post con título y cuerpo y le agrega el comentario a su lista de comentarios. Se remueve el post con la lista vieja de comentarios y se aserta el post con la nueva lista. Esto hace que el orden de los posts sea según 1) comentario más nuevo, 2) post más nuevo. Sería como mostrar los posts modificados ultimamente primero.

Las acciones de publicar y comentar utilizan el método POST para enviar los parámetros necesarios. Se realizan unos chequeos antes de realizar la publicación a través de parámetros HTTP (título no más de 40 caracteres, cuerpo no más de 480 caracteres, etc). Luego de validarlos, se utlizan las operaciones previstas por el modelo de base de datos.

Se cuenta con un handler para páginas de error (direcciones no disponibles). Realizado con quasiquotes.

